// Code generated by MockGen. DO NOT EDIT.
// Source: object.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUObject is a mock of UObject interface.
type MockUObject struct {
	ctrl     *gomock.Controller
	recorder *MockUObjectMockRecorder
}

// MockUObjectMockRecorder is the mock recorder for MockUObject.
type MockUObjectMockRecorder struct {
	mock *MockUObject
}

// NewMockUObject creates a new mock instance.
func NewMockUObject(ctrl *gomock.Controller) *MockUObject {
	mock := &MockUObject{ctrl: ctrl}
	mock.recorder = &MockUObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUObject) EXPECT() *MockUObjectMockRecorder {
	return m.recorder
}

// GetProperty mocks base method.
func (m *MockUObject) GetProperty(name string) (any, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProperty", name)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetProperty indicates an expected call of GetProperty.
func (mr *MockUObjectMockRecorder) GetProperty(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProperty", reflect.TypeOf((*MockUObject)(nil).GetProperty), name)
}

// SetProperty mocks base method.
func (m *MockUObject) SetProperty(name string, value any) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetProperty", name, value)
	ret0, _ := ret[0].(bool)
	return ret0
}

// SetProperty indicates an expected call of SetProperty.
func (mr *MockUObjectMockRecorder) SetProperty(name, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetProperty", reflect.TypeOf((*MockUObject)(nil).SetProperty), name, value)
}
